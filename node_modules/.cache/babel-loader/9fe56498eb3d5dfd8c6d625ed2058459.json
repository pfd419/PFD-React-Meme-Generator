{"ast":null,"code":"import _defineProperty from \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\src\\\\components\\\\user-input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport { UserContext } from '../contexts/UserContext';\n\nfunction setUserName(state, value) {\n  return {\n    id: state.id,\n    name: value\n  };\n}\n\nfunction useSetUserName({\n  reducer = (s, a) => a.changes\n} = {}) {\n  const userContext = useContext(UserContext);\n\n  const _useReducer = useReducer((state, value) => {\n    const changes = toggleThemeReducer(state, value);\n    return reducer(state, _objectSpread({}, value, {\n      changes\n    }));\n  }, userContext.user),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        signedInUser = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const toggle = () => dispatch({\n    type: \"toggle\"\n  });\n\n  const setLight = () => dispatch({\n    type: \"light\"\n  });\n\n  const setDark = () => dispatch({\n    type: \"dark\"\n  });\n\n  return {\n    selectedTheme,\n    toggle,\n    setLight,\n    setDark\n  };\n}\n\nfunction UserInput() {\n  const userContext = useContext(UserContext);\n  const user = userContext.user,\n        handleSetUserName = userContext.handleSetUserName;\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"User Name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleSetUserName,\n    value: user.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nexport default UserInput;","map":{"version":3,"sources":["D:\\Workspace\\Code\\ReactSample\\sample\\src\\components\\user-input.js"],"names":["React","useContext","UserContext","setUserName","state","value","id","name","useSetUserName","reducer","s","a","changes","userContext","useReducer","toggleThemeReducer","user","signedInUser","dispatch","toggle","type","setLight","setDark","selectedTheme","UserInput","handleSetUserName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AAC/B,SAAO;AACHC,IAAAA,EAAE,EAAEF,KAAK,CAACE,EADP;AAEHC,IAAAA,IAAI,EAAEF;AAFH,GAAP;AAIH;;AAED,SAASG,cAAT,CAAwB;AAAEC,EAAAA,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC;AAAxB,IAAoC,EAA5D,EAAgE;AAC5D,QAAMC,WAAW,GAAGZ,UAAU,CAACC,WAAD,CAA9B;;AAD4D,sBAG3BY,UAAU,CACvC,CAACV,KAAD,EAAQC,KAAR,KAAkB;AACd,UAAMO,OAAO,GAAGG,kBAAkB,CAACX,KAAD,EAAQC,KAAR,CAAlC;AACA,WAAOI,OAAO,CAACL,KAAD,oBAAaC,KAAb;AAAoBO,MAAAA;AAApB,OAAd;AACH,GAJsC,EAKvCC,WAAW,CAACG,IAL2B,CAHiB;AAAA;AAAA,QAGrDC,YAHqD;AAAA,QAGvCC,QAHuC;;AAW5D,QAAMC,MAAM,GAAG,MAAMD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA7B;;AACA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA/B;;AACA,QAAME,OAAO,GAAG,MAAMJ,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA9B;;AAEA,SAAO;AAAEG,IAAAA,aAAF;AAAiBJ,IAAAA,MAAjB;AAAyBE,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,GAAP;AACH;;AAED,SAASE,SAAT,GAAqB;AACjB,QAAMX,WAAW,GAAGZ,UAAU,CAACC,WAAD,CAA9B;AADiB,QAETc,IAFS,GAEmBH,WAFnB,CAETG,IAFS;AAAA,QAEHS,iBAFG,GAEmBZ,WAFnB,CAEHY,iBAFG;AAIjB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,QAAQ,EAAEA,iBAHd;AAII,IAAA,KAAK,EAAET,IAAI,CAACT,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAUH;;AAGD,eAAeiB,SAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nfunction setUserName(state, value) {\r\n    return {\r\n        id: state.id,\r\n        name: value\r\n    }\r\n}\r\n\r\nfunction useSetUserName({ reducer = (s, a) => a.changes } = {}) {\r\n    const userContext = useContext(UserContext);\r\n\r\n    const [signedInUser, dispatch] = useReducer(\r\n        (state, value) => {\r\n            const changes = toggleThemeReducer(state, value);\r\n            return reducer(state, { ...value, changes })\r\n        },\r\n        userContext.user\r\n    );\r\n\r\n    const toggle = () => dispatch({ type: \"toggle\" });\r\n    const setLight = () => dispatch({ type: \"light\" });\r\n    const setDark = () => dispatch({ type: \"dark\" });\r\n\r\n    return { selectedTheme, toggle, setLight, setDark }\r\n}\r\n\r\nfunction UserInput() {\r\n    const userContext = useContext(UserContext);\r\n    const { user, handleSetUserName } = userContext;\r\n\r\n    return (\r\n        <section>\r\n            <strong>User Name: </strong>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={handleSetUserName}\r\n                value={user.name} />\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}