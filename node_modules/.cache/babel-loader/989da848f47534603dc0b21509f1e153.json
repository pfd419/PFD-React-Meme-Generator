{"ast":null,"code":"import _defineProperty from\"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useContext,useReducer,useEffect}from\"react\";import{ThemeContext,themes}from'../contexts/ThemeContext';function toggleThemeReducer(state,action){switch(action.type){case\"toggle\":{return state.name===themes.dark.name?themes.light:themes.dark;}case\"light\":{return themes.light;}case\"dark\":{return themes.dark;}default:{throw new Error(\"Unhandled type: {action.type}\");}}}function useToggleTheme(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$reducer=_ref.reducer,reducer=_ref$reducer===void 0?function(s,a){return a.changes;}:_ref$reducer;var themeContext=useContext(ThemeContext);var _useReducer=useReducer(function(state,action){var changes=toggleThemeReducer(state,action);return reducer(state,_objectSpread({},action,{changes:changes}));},themeContext.selectedTheme),_useReducer2=_slicedToArray(_useReducer,2),selectedTheme=_useReducer2[0],dispatch=_useReducer2[1];var toggle=function toggle(){return dispatch({type:\"toggle\"});};var setLight=function setLight(){return dispatch({type:\"light\"});};var setDark=function setDark(){return dispatch({type:\"dark\"});};return{selectedTheme:selectedTheme,toggle:toggle,setLight:setLight,setDark:setDark};}export default function ThemeTogglerButton(){var themeContext=useContext(ThemeContext);var _useToggleTheme=useToggleTheme({reducer:function reducer(selectedTheme,action){return action.changes;}}),selectedTheme=_useToggleTheme.selectedTheme,toggle=_useToggleTheme.toggle,setLight=_useToggleTheme.setLight,setDark=_useToggleTheme.setDark;// Pass new state via context when selectedTheme has changed\nuseEffect(function(){if(themeContext.selectedTheme!==selectedTheme){themeContext.setTheme(selectedTheme);}});return React.createElement(\"section\",null,React.createElement(\"button\",{onClick:setLight,style:selectedTheme},\"Set Light\"),React.createElement(\"button\",{onClick:setDark,style:selectedTheme},\"Set Dark\"),React.createElement(\"button\",{onClick:toggle,style:selectedTheme},\"Toggle Theme\"));}","map":{"version":3,"sources":["D:\\Workspace\\Code\\ReactSample\\sample\\src\\components\\theme-toggler-button.js"],"names":["React","useContext","useReducer","useEffect","ThemeContext","themes","toggleThemeReducer","state","action","type","name","dark","light","Error","useToggleTheme","reducer","s","a","changes","themeContext","selectedTheme","dispatch","toggle","setLight","setDark","ThemeTogglerButton","setTheme"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from '../contexts/ThemeContext';\r\n\r\nfunction toggleThemeReducer(state, action) {\r\n    switch (action.type) {\r\n        case \"toggle\": {\r\n            return state.name === themes.dark.name\r\n                ? themes.light\r\n                : themes.dark;\r\n        }\r\n        case \"light\": {\r\n            return themes.light;\r\n        }\r\n        case \"dark\": {\r\n            return themes.dark;\r\n        }\r\n        default: {\r\n            throw new Error(\"Unhandled type: {action.type}\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction useToggleTheme({ reducer = (s, a) => a.changes } = {}) {\r\n    const themeContext = useContext(ThemeContext);\r\n\r\n    const [selectedTheme, dispatch] = useReducer(\r\n        (state, action) => {\r\n            const changes = toggleThemeReducer(state, action);\r\n            return reducer(state, { ...action, changes })\r\n        },\r\n        themeContext.selectedTheme\r\n    );\r\n\r\n    const toggle = () => dispatch({ type: \"toggle\" });\r\n    const setLight = () => dispatch({ type: \"light\" });\r\n    const setDark = () => dispatch({ type: \"dark\" });\r\n\r\n    return { selectedTheme, toggle, setLight, setDark }\r\n}\r\n\r\n\r\nexport default function ThemeTogglerButton() {\r\n    const themeContext = useContext(ThemeContext);\r\n    const { selectedTheme, toggle, setLight, setDark } = useToggleTheme({\r\n        reducer(selectedTheme, action) {\r\n            return action.changes;\r\n        }\r\n    });\r\n\r\n    // Pass new state via context when selectedTheme has changed\r\n    useEffect(() => {\r\n        if (themeContext.selectedTheme !== selectedTheme) {\r\n            themeContext.setTheme(selectedTheme);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <section>\r\n            <button onClick={setLight} style={selectedTheme}>Set Light</button>\r\n            <button onClick={setDark} style={selectedTheme}>Set Dark</button>\r\n            <button onClick={toggle} style={selectedTheme}>\r\n                Toggle Theme\r\n            </button>\r\n        </section>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}