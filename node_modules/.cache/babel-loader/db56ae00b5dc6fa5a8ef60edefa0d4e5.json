{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\src\\\\App.js\";\nimport React from 'react';\nimport { ThemeContext, themes } from './ThemeContext';\nimport { UserContext, user } from './UserContext';\nimport ThemeTogglerButton from './theme-toggler-button';\nimport UserInput from './user-input';\nimport ProfilePage from './profile-page';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: {\n          selectedTheme: state.theme.selectedTheme === themes.dark ? themes.light : themes.dark,\n          setTheme: state.theme.setTheme,\n          toggleTheme: state.theme.toggleTheme\n        }\n      }));\n    };\n\n    this.handleSetUserName = event => {\n      const value = event.target.value;\n      this.setState(state => ({\n        signedInUser: {\n          user: {\n            id: state.id,\n            name: value\n          },\n          setUser: state.user.setUser,\n          handleSetUserName: state.user.handleSetUserName\n        }\n      }));\n    };\n\n    this.state = {\n      theme: {\n        selectedTheme: themes.light,\n        setTheme: value => this.setState({\n          theme: value\n        }),\n        toggleTheme: this.toggleTheme\n      },\n      signedInUser: {\n        user: user,\n        setUser: value => this.setState({\n          user: value\n        }),\n        handleSetUserName: this.handleSetUserName\n      }\n    };\n  }\n\n  render() {\n    // App component that provides initial context values\n    return React.createElement(ThemeContext.Provider, {\n      value: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(UserContext.Provider, {\n      value: this.state.signedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction Layout() {\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, theme => React.createElement(\"div\", {\n    style: theme.selectedTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n}\n\nfunction Toolbar(props) {\n  return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(UserInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(ThemeTogglerButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n} // A component may consume multiple contexts\n\n\nfunction Content() {\n  return React.createElement(ProfilePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Workspace\\Code\\ReactSample\\sample\\src\\App.js"],"names":["React","ThemeContext","themes","UserContext","user","ThemeTogglerButton","UserInput","ProfilePage","App","Component","constructor","toggleTheme","setState","state","theme","selectedTheme","dark","light","setTheme","handleSetUserName","event","value","target","signedInUser","id","name","setUser","render","Layout","Toolbar","props","Content"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ThemeContext, themes } from './ThemeContext';\nimport { UserContext, user } from './UserContext';\nimport ThemeTogglerButton from './theme-toggler-button';\nimport UserInput from './user-input';\nimport ProfilePage from './profile-page';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: {\n          selectedTheme: state.theme.selectedTheme === themes.dark\n            ? themes.light\n            : themes.dark,\n            setTheme: state.theme.setTheme,\n            toggleTheme: state.theme.toggleTheme\n        }\n      }));\n    };\n\n    this.handleSetUserName = (event) => {\n      const { value } = event.target;\n      this.setState(state => ({\n        signedInUser: {\n          user: {\n            id: state.id,\n            name: value\n          },\n          setUser: state.user.setUser,\n          handleSetUserName: state.user.handleSetUserName\n        }\n      }));\n    };\n\n    this.state = {\n      theme: {\n        selectedTheme: themes.light,\n        setTheme: (value => this.setState({ theme: value })),\n        toggleTheme: this.toggleTheme\n      },\n      signedInUser: {\n        user: user,\n        setUser: (value => this.setState({ user: value })),\n        handleSetUserName: this.handleSetUserName\n      }\n    }\n  }\n\n  render() {\n    // App component that provides initial context values\n    return (\n      <ThemeContext.Provider value={this.state.theme}>\n        <UserContext.Provider value={this.state.signedInUser}>\n          <Layout />\n        </UserContext.Provider>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nfunction Layout() {\n  return (\n    <ThemeContext.Consumer>\n      {theme => (\n        <div style={theme.selectedTheme}>\n          <Toolbar />\n          <br /><hr />\n          <Content />\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\n\nfunction Toolbar(props) {\n  return (\n    <nav>\n      <form>\n        <UserInput />\n        <br />\n        <ThemeTogglerButton />\n      </form>\n    </nav>\n  )\n}\n\n// A component may consume multiple contexts\nfunction Content() {\n  return (\n    <ProfilePage />\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}