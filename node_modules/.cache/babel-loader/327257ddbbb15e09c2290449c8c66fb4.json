{"ast":null,"code":"import _defineProperty from \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\src\\\\components\\\\user-input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useReducer, useEffect } from \"react\";\nimport { UserContext } from '../contexts/UserContext';\n\nfunction setUserNameReducer(state, event) {\n  console.log(event);\n  return {\n    id: state.id,\n    name: event\n  };\n}\n\nfunction useSetUserName({\n  reducer = (s, a) => a.changes\n} = {}) {\n  const userContext = useContext(UserContext);\n\n  const _useReducer = useReducer((state, event) => {\n    const changes = setUserNameReducer(state, event);\n    return reducer(state, _objectSpread({}, event, {\n      changes\n    }));\n  }, userContext.user),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        signedInUser = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const setUserName = event => dispatch(event);\n\n  return {\n    signedInUser,\n    setUserName\n  };\n}\n\nfunction UserInput() {\n  const userContext = useContext(UserContext);\n\n  const _useSetUserName = useSetUserName({\n    reducer(signedInUser, value) {\n      return value.changes;\n    }\n\n  }),\n        signedInUser = _useSetUserName.signedInUser,\n        setUserName = _useSetUserName.setUserName; // Pass new state via context when selectedTheme has changed\n\n\n  useEffect(() => {\n    if (userContext.signedInUser !== signedInUser) {//userContext.setUser(userContext.signedInUser);\n    }\n  });\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"User Name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: setUserName,\n    value: userContext.signedInUser ? userContext.signedInUser.name : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n\nexport default UserInput;","map":{"version":3,"sources":["D:\\Workspace\\Code\\ReactSample\\sample\\src\\components\\user-input.js"],"names":["React","useContext","useReducer","useEffect","UserContext","setUserNameReducer","state","event","console","log","id","name","useSetUserName","reducer","s","a","changes","userContext","user","signedInUser","dispatch","setUserName","UserInput","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,KAAnC,EAA0C;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACHG,IAAAA,EAAE,EAAEJ,KAAK,CAACI,EADP;AAEHC,IAAAA,IAAI,EAAEJ;AAFH,GAAP;AAIH;;AAED,SAASK,cAAT,CAAwB;AAAEC,EAAAA,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC;AAAxB,IAAoC,EAA5D,EAAgE;AAC5D,QAAMC,WAAW,GAAGhB,UAAU,CAACG,WAAD,CAA9B;;AAD4D,sBAG3BF,UAAU,CACvC,CAACI,KAAD,EAAQC,KAAR,KAAkB;AACd,UAAMS,OAAO,GAAGX,kBAAkB,CAACC,KAAD,EAAQC,KAAR,CAAlC;AACA,WAAOM,OAAO,CAACP,KAAD,oBAAaC,KAAb;AAAoBS,MAAAA;AAApB,OAAd;AACH,GAJsC,EAKvCC,WAAW,CAACC,IAL2B,CAHiB;AAAA;AAAA,QAGrDC,YAHqD;AAAA,QAGvCC,QAHuC;;AAW5D,QAAMC,WAAW,GAAId,KAAD,IAAWa,QAAQ,CAACb,KAAD,CAAvC;;AAEA,SAAO;AAAEY,IAAAA,YAAF;AAAgBE,IAAAA;AAAhB,GAAP;AACH;;AAED,SAASC,SAAT,GAAqB;AACjB,QAAML,WAAW,GAAGhB,UAAU,CAACG,WAAD,CAA9B;;AADiB,0BAEqBQ,cAAc,CAAC;AACjDC,IAAAA,OAAO,CAACM,YAAD,EAAeI,KAAf,EAAsB;AACzB,aAAOA,KAAK,CAACP,OAAb;AACH;;AAHgD,GAAD,CAFnC;AAAA,QAETG,YAFS,mBAETA,YAFS;AAAA,QAEKE,WAFL,mBAEKA,WAFL,EAQjB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,WAAW,CAACE,YAAZ,KAA6BA,YAAjC,EAA+C,CAC3C;AACH;AACJ,GAJQ,CAAT;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,QAAQ,EAAEE,WAHd;AAII,IAAA,KAAK,EAAEJ,WAAW,CAACE,YAAZ,GAA0BF,WAAW,CAACE,YAAZ,CAAyBR,IAAnD,GAA0D,EAJrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAUH;;AAGD,eAAeW,SAAf","sourcesContent":["import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nfunction setUserNameReducer(state, event) {\r\n    console.log(event);\r\n    return {\r\n        id: state.id,\r\n        name: event\r\n    }\r\n}\r\n\r\nfunction useSetUserName({ reducer = (s, a) => a.changes } = {}) {\r\n    const userContext = useContext(UserContext);\r\n\r\n    const [signedInUser, dispatch] = useReducer(\r\n        (state, event) => {\r\n            const changes = setUserNameReducer(state, event);\r\n            return reducer(state, { ...event, changes })\r\n        },\r\n        userContext.user\r\n    );\r\n\r\n    const setUserName = (event) => dispatch(event);\r\n\r\n    return { signedInUser, setUserName }\r\n}\r\n\r\nfunction UserInput() {\r\n    const userContext = useContext(UserContext);\r\n    const { signedInUser, setUserName } = useSetUserName({\r\n        reducer(signedInUser, value) {\r\n            return value.changes;\r\n        }\r\n    });\r\n\r\n    // Pass new state via context when selectedTheme has changed\r\n    useEffect(() => {\r\n        if (userContext.signedInUser !== signedInUser) {\r\n            //userContext.setUser(userContext.signedInUser);\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <section>\r\n            <strong>User Name: </strong>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={setUserName}\r\n                value={userContext.signedInUser? userContext.signedInUser.name : ''} />\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}