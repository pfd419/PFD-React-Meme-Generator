{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\src\\\\App.js\";\nimport React from 'react';\nimport { ThemeContext, themes } from './theme-context';\nimport ThemeTogglerButton from './theme-toggler-button';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: state.theme === themes.dark ? themes.light : themes.dark\n      }));\n    }; // State also contains the updater function so it will\n    // be passed down into the context provider\n\n\n    this.state = {\n      theme: themes.light,\n      toggleTheme: this.toggleTheme\n    };\n  }\n\n  render() {\n    // The entire state is passed to the provider\n    return React.createElement(ThemeContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Content() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" This is my app \"), React.createElement(ThemeTogglerButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Workspace\\Code\\ReactSample\\sample\\src\\App.js"],"names":["React","ThemeContext","themes","ThemeTogglerButton","App","Component","constructor","props","toggleTheme","setState","state","theme","dark","light","render","Content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,YAAR,EAAsBC,MAAtB,QAAmC,iBAAnC;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AAEA,SAAKC,WAAL,GAAmB,MAAM;AACvB,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBC,QAAAA,KAAK,EACHD,KAAK,CAACC,KAAN,KAAgBT,MAAM,CAACU,IAAvB,GACIV,MAAM,CAACW,KADX,GAEIX,MAAM,CAACU;AAJS,OAAL,CAAnB;AAMD,KAPD,CAHiB,CAYjB;AACA;;;AACA,SAAKF,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAET,MAAM,CAACW,KADH;AAEXL,MAAAA,WAAW,EAAE,KAAKA;AAFP,KAAb;AAID;;AAEDM,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,KAAKJ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA5B+B;;AA+BlC,SAASK,OAAT,GAAmB;AACjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAGD,eAAeX,GAAf","sourcesContent":["import React from 'react';\n\nimport {ThemeContext, themes} from './theme-context';\nimport ThemeTogglerButton from './theme-toggler-button';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme:\n          state.theme === themes.dark\n            ? themes.light\n            : themes.dark,\n      }));\n    };\n\n    // State also contains the updater function so it will\n    // be passed down into the context provider\n    this.state = {\n      theme: themes.light,\n      toggleTheme: this.toggleTheme,\n    };\n  }\n\n  render() {\n    // The entire state is passed to the provider\n    return (\n      <ThemeContext.Provider value={this.state}>\n        <Content />\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nfunction Content() {\n  return (\n    <div>\n      <h1> This is my app </h1>\n      <ThemeTogglerButton />\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}