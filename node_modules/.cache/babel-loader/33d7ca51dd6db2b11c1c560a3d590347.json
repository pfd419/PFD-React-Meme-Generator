{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Code\\\\ReactSample\\\\sample\\\\src\\\\App.js\";\nimport React from 'react';\nimport { themes } from './theme-context';\nimport ThemeTogglerButton from './theme-toggler-button';\nimport ProfilePage from './profile-page';\nimport './App.css'; // Theme context, default to light theme\n\nconst ThemeContext = React.createContext('light'); // Signed-in user context\n\nconst user = {\n  name: 'Guest'\n};\nconst UserContext = React.createContext(user);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: {\n          styles: state.theme.styles === themes.dark ? themes.light : themes.dark\n        }\n      }));\n    };\n\n    this.state = {\n      theme: themes.light,\n      toggleTheme: this.toggleTheme\n    };\n  }\n\n  render() {\n    // App component that provides initial context values\n    return React.createElement(ThemeContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(UserContext.Provider, {\n      value: this.state.signedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction Layout() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nfunction Sidebar(props) {\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, theme => {\n    console.log(theme);\n    return React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ThemeTogglerButton, {\n      value: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  });\n} // A component may consume multiple contexts\n\n\nfunction Content() {\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, theme => React.createElement(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, user => React.createElement(ProfilePage, {\n    user: user,\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Workspace\\Code\\ReactSample\\sample\\src\\App.js"],"names":["React","themes","ThemeTogglerButton","ProfilePage","ThemeContext","createContext","user","name","UserContext","App","Component","constructor","props","toggleTheme","setState","state","theme","styles","dark","light","render","signedInUser","Layout","Sidebar","console","log","Content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAoB,OAApB,CAArB,C,CAEA;;AACA,MAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE;AADK,CAAb;AAGA,MAAMC,WAAW,GAAGR,KAAK,CAACK,aAAN,CAAoBC,IAApB,CAApB;;AAEA,MAAMG,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AAGA,SAAKC,WAAL,GAAmB,MAAM;AACvB,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBC,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAEF,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAuBhB,MAAM,CAACiB,IAA9B,GACJjB,MAAM,CAACkB,KADH,GAEJlB,MAAM,CAACiB;AAHN;AADe,OAAL,CAAnB;AAMD,KAPD;;AASA,SAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEf,MAAM,CAACkB,KADH;AAEXN,MAAAA,WAAW,EAAE,KAAKA;AAFP,KAAb;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,KAAKL,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWM,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AA7B+B;;AAgClC,SAASC,MAAT,GAAkB;AACd,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA;AAMH;;AAGD,SAASC,OAAT,CAAiBX,KAAjB,EAAwB;AACtB,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,IAAI;AAACQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAAmB,WAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAD4B;AAI9B,GALF,CADF;AASD,C,CAED;;;AACA,SAASU,OAAT,GAAmB;AACjB,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,IACJ,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,IACH,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAyB,IAAA,KAAK,EAAEU,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADF;AAWD;;AAGD,eAAeP,GAAf","sourcesContent":["import React from 'react';\n\nimport {themes} from './theme-context';\nimport ThemeTogglerButton from './theme-toggler-button';\nimport ProfilePage from './profile-page';\n\nimport './App.css';\n\n// Theme context, default to light theme\nconst ThemeContext = React.createContext('light');\n\n// Signed-in user context\nconst user = {\n  name: 'Guest',\n}\nconst UserContext = React.createContext(user);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: {\n          styles: state.theme.styles === themes.dark\n            ? themes.light\n            : themes.dark,\n      }}));\n    };\n\n    this.state = {\n      theme: themes.light,\n      toggleTheme: this.toggleTheme,\n    };\n  }\n  \n  render() {\n    // App component that provides initial context values\n    return (\n      <ThemeContext.Provider value={this.state}>\n        <UserContext.Provider value={this.state.signedInUser}>\n          <Layout />\n        </UserContext.Provider>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nfunction Layout() {\n    return (\n    <div>\n      <Sidebar />\n      <Content />\n    </div>\n  );\n}\n\n\nfunction Sidebar(props) {\n  return (\n    <ThemeContext.Consumer>\n      {theme => {console.log(theme);return (\n        <nav>\n            <ThemeTogglerButton value={theme}/>\n        </nav>\n    )}}\n    </ThemeContext.Consumer>\n  )\n}\n\n// A component may consume multiple contexts\nfunction Content() {\n  return (\n    <ThemeContext.Consumer>\n      {theme => (\n        <UserContext.Consumer>\n          {user => (\n            <ProfilePage user={user} theme={theme} />\n          )}\n        </UserContext.Consumer>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}